name: Frontend Continuous Deployment

on:
  # Below 5 lines allow pipeline to be executed automatically on merges to the main branch
  pull_request:
    branches:
      - main
    types:
      - closed
  # Set manually triggered for testing
  workflow_dispatch: 

env:
  REACT_APP_MOVIE_API_URL: 5000

jobs:
  INSTALL_BUILD_TEST:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install, Build, Test
      run: |
        npm install
        npm run lint
        npm run test
      working-directory: ./starter/frontend

  DOCKER_BUILD:
    runs-on: ubuntu-latest
    needs: INSTALL_BUILD_TEST
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build --build-arg REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} -t ${{ secrets.IMAGE_REPO_NAME }}:latest .
      working-directory: ./starter/frontend

  AWS_CONFIGURE_AND_LOGIN:
    runs-on: ubuntu-latest
    needs: DOCKER_BUILD
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region:  ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Check image availability
      run: docker image ls

    - name: Logging into ECR
      run: aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com

    - name: Docker image tag 
      run: docker tag ${{ secrets.IMAGE_REPO_NAME }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}:latest
    
    - name: Push the docker image to ECR in the AWS account
      run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}:latest
